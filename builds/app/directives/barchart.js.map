{"version":3,"sources":["directives/barchart.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,sCAA+E;AAC9E,uBAAyB;AAMzB,IAAa,QAAQ;IAKnB,kBAAc,UAAsB,EAAsB,KAAa,EAAuB,MAAc;QAE1G,IAAI,EAAE,GAAW,UAAU,CAAC,aAAa,CAAC,CAAE,0DAA0D;QACtG,IAAI,KAAK,GAAQ,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAa,qBAAqB;QAEjE,kBAAkB;QAClB,IAAI,CAAC,IAAI,GAAG,KAAK;aACZ,MAAM,CAAC,KAAK,CAAC;aACb,IAAI,CAAC;YACJ,OAAO,EAAE,OAAO;SACjB,CAAC;aACD,KAAK,CAAC;YACL,OAAO,EAAE,KAAK,GAAG,IAAI;YACrB,QAAQ,EAAE,MAAM,GAAG,IAAI;SACxB,CAAC;aACD,SAAS,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,0BAA0B;IAClB,2BAAQ,GAAhB,UAAiB,QAAa;QAE5B,EAAE,CAAA,CAAE,CAAC,QAAS,CAAC;YACb,MAAM,CAAC;QAET,yEAAyE;QACzE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;aACzC,UAAU,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;aAC5B,KAAK,CAAC,OAAO,EAAE,UAAC,CAAK,IAAK,OAAA,CAAC,GAAG,GAAG,EAAP,CAAO,CAAC;aAClC,IAAI,CAAE,UAAC,CAAK,IAAK,OAAA,CAAC,GAAG,GAAG,EAAP,CAAO,CAAC,CAAC;IACjC,CAAC;IAED,0BAA0B;IAClB,8BAAW,GAAnB,UAAqB,OAAiD;QAEpE,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;IAC7B,CAAC;IACH,eAAC;AAAD,CAzCA,AAyCC,IAAA;AAzCY,QAAQ;IAJpB,gBAAS,CAAC;QACT,QAAQ,EAAE,WAAW;KACtB,CAAC;IAOuC,WAAA,gBAAS,CAAC,OAAO,CAAC,CAAA,EAAiB,WAAA,gBAAS,CAAC,QAAQ,CAAC,CAAA;qCAAnE,iBAAU;GALzB,QAAQ,CAyCpB;AAzCY,4BAAQ","file":"barchart.js","sourcesContent":["import { Directive, ElementRef, Attribute, SimpleChange } from '@angular/core';\r\n import * as d3 from 'd3';\r\n\r\n @Directive({\r\n   selector: 'bar-graph',\r\n })\r\n\r\n export class BarGraph \r\n {\r\n   private data: Array<number>;  // raw chart data\r\n   private divs: any;            // DIV collection\r\n\r\n   constructor ( elementRef: ElementRef, @Attribute('width') width: string, @Attribute('height') height: string ) \r\n   {\r\n     let el: any    = elementRef.nativeElement;  // reference to <bar-graph> element from the main template\r\n     let graph: any = d3.select(el);             // D3 chart container\r\n\r\n     // setup the graph\r\n     this.divs = graph\r\n         .append('div')\r\n         .attr({\r\n           'class': 'chart'\r\n         })\r\n         .style({\r\n           'width': width + 'px',\r\n           'height': height + 'px',\r\n         })\r\n         .selectAll('div');\r\n   }\r\n\r\n   // Render the D3 Bar Chart\r\n   private __render(newValue: any): void\r\n   {\r\n     if( !newValue ) \r\n       return;\r\n   \r\n     // join the data and chain styles and bar text ... all the usual suspects\r\n     this.divs.data(newValue).enter().append('div')\r\n         .transition().ease('elastic')\r\n         .style('width', (d:any) => d + '%')\r\n         .text( (d:any) => d + '%');\r\n   }\r\n\r\n   // update render on change\r\n   private ngOnChanges( changes: { [propertyName: string]: SimpleChange } ): void \r\n   {\r\n     this.__render( this.data );\r\n   }\r\n }"]}